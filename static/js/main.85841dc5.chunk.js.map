{"version":3,"sources":["components/StartQuiz/StartQuiz.module.css","img/hand-1.svg","components/FinishedQuiz/FinishedQuiz.module.css","containers/Quiz/Quiz.module.css","components/ActiveQuiz/ActiveQuiz.module.css","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.module.css","components/Navigation/Drawer/Drawer.module.css","components/Navigation/MenuToggle/MenuToggle.module.css","hoc/Layout/Layout.module.css","components/ActiveQuiz/AnswersList/AnswersList.module.css","components/UI/Button/Button.module.css","components/UI/Backdrop/Backdrop.module.css","hoc/Layout/Layout.js","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.js","components/ActiveQuiz/AnswersList/AnswersList.js","components/ActiveQuiz/ActiveQuiz.js","components/UI/Button/Button.js","components/FinishedQuiz/FinishedQuiz.js","components/UI/Backdrop/Backdrop.js","components/Navigation/Drawer/Drawer.js","components/Navigation/MenuToggle/MenuToggle.js","containers/Quiz/Quiz.js","components/StartQuiz/StartQuiz.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Layout","className","classes","this","props","children","Component","AnswerItem","cls","state","push","join","onClick","onAnswerClick","answer","id","text","AnswersList","answers","map","index","key","ActiveQuiz","answerNumber","question","quizLength","Question","Button","disabled","FinishedQuiz","thumbsUp","src","alt","totalScore","checkpoint","onRetry","Backdrop","Drawer","quizData","slice","reverse","items","money","console","log","isOpen","close","renderLinks","onClose","MenuToggle","open","onToggle","Quiz","onAnswerClickHandler","answerId","answerState","Object","keys","activeQuestion","rightAnswerId","setState","timeout","setTimeout","isQuizFinished","isFinished","clearTimeout","retryHandler","toggleMenuHandler","menu","menuCloseHandler","length","QuizWrapper","StartQuiz","imgWrapper","startWrapper","headline","App","useState","isStart","setIsStarted","quiz","setQuiz","useEffect","fetch","then","response","json","data","catch","err","error","url","toString","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.85841dc5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"StartQuiz\":\"StartQuiz_StartQuiz__2O3MX\",\"img-wrapper\":\"StartQuiz_img-wrapper__3mfkx\",\"thumbsUp\":\"StartQuiz_thumbsUp__n3X8F\",\"start-wrapper\":\"StartQuiz_start-wrapper__11E1R\",\"headline\":\"StartQuiz_headline__agj3G\"};","module.exports = __webpack_public_path__ + \"static/media/hand-1.ad6621a0.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FinishedQuiz\":\"FinishedQuiz_FinishedQuiz__161Xp\",\"thumbsUp\":\"FinishedQuiz_thumbsUp___tbGx\",\"StartQuiz\":\"FinishedQuiz_StartQuiz__3azRB\",\"totalScore\":\"FinishedQuiz_totalScore__PQUwf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quiz\":\"Quiz_Quiz__1NHQK\",\"QuizWrapper\":\"Quiz_QuizWrapper__DPoaL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActiveQuiz\":\"ActiveQuiz_ActiveQuiz__3sdjV\",\"Question\":\"ActiveQuiz_Question__2uHtG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswerItem\":\"AnswerItem_AnswerItem__3cpKr\",\"success\":\"AnswerItem_success__Kdt-S\",\"error\":\"AnswerItem_error__2gDYp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Drawer\":\"Drawer_Drawer__3w1Bp\",\"close\":\"Drawer_close__5Au5A\",\"active\":\"Drawer_active__17zUr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuToggle\":\"MenuToggle_MenuToggle__mRe8P\",\"open\":\"MenuToggle_open__i-8UQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__1s2jD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswersList\":\"AnswersList_AnswersList__2TtY8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2bxnt\",\"error\":\"Button_error__3yD6a\",\"success\":\"Button_success__9LQr7\",\"primary\":\"Button_primary__1hEOW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3jQ4f\"};","import React, {Component} from 'react';\r\nimport classes from './Layout.module.css';\r\n\r\nclass Layout extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.Layout}>\r\n\r\n                <main>\r\n                    {this.props.children}\r\n                </main>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Layout;","import React from 'react';\r\nimport classes from './AnswerItem.module.css';\r\n\r\nconst AnswerItem = (props) => {\r\n    const cls = [classes.AnswerItem]\r\n\r\n    if(props.state) {\r\n    cls.push(classes[props.state])\r\n    }\r\n    return (\r\n            <li className={cls.join(' ')}\r\n                onClick={()=>{props.onAnswerClick(props.answer.id)}}\r\n            >\r\n                {props.answer.text}\r\n            </li>\r\n    );\r\n};\r\n\r\nexport default AnswerItem;","import React from 'react';\r\nimport classes from './AnswersList.module.css';\r\nimport AnswerItem from \"./AnswerItem/AnswerItem\";\r\n\r\nconst AnswersList = (props) => (\r\n    <ul className={classes.AnswersList}>\r\n        {props.answers.map((answer,index)=> {\r\n            return(\r\n                <AnswerItem\r\n                    key={index}\r\n                    answer={answer}\r\n                    onAnswerClick={props.onAnswerClick}\r\n                    state={props.state ? props.state[answer.id]:null}\r\n                />\r\n            )\r\n        })}\r\n    </ul>\r\n);\r\n\r\nexport default AnswersList;","import React from 'react';\r\nimport classes from './ActiveQuiz.module.css'\r\nimport AnswersList from \"./AnswersList/AnswersList\";\r\n\r\nconst ActiveQuiz = (props) => {\r\n\r\n    const {answerNumber, question, quizLength, state, answers, onAnswerClick} = props;\r\n\r\n    return (\r\n        <div className={classes.ActiveQuiz}>\r\n            <p className={classes.Question}>\r\n            <span>\r\n                <strong>{answerNumber}. </strong>\r\n                {question}\r\n            </span>\r\n                <small>{answerNumber} из {quizLength}</small>\r\n            </p>\r\n            <AnswersList\r\n                state={state}\r\n                answers={answers}\r\n                onAnswerClick={onAnswerClick}\r\n            />\r\n\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\nexport default ActiveQuiz;","import React from 'react';\r\nimport classes from './Button.module.css';\r\n\r\nconst Button = (props) => {\r\n    const cls = [\r\n        classes.Button,\r\n        // classes[props.type]\r\n    ]\r\n    return (\r\n        <button\r\n            onClick={props.onClick}\r\n            // className={cls.join(' ')}\r\n            className={\"Button\"}\r\n            disabled={props.disabled}\r\n        >\r\n            {props.children}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default Button;","import React from 'react';\r\nimport classes from './FinishedQuiz.module.css';\r\nimport thumbsUp from '../../img/hand-1.svg';\r\nimport Button from \"../UI/Button/Button\";\r\n\r\nconst FinishedQuiz = (props) => {\r\n    return (\r\n        <div className={classes.FinishedQuiz}>\r\n            <div className=\"imgWrapper\">\r\n                <img className={classes.thumbsUp} src={thumbsUp} alt=\"Screenshot\"/>\r\n            </div>\r\n            <div className={classes.totalScore}>\r\n                <h2>Total score:</h2>\r\n                <div className=\"earned\">${props.checkpoint} earned</div>\r\n                <Button onClick={props.onRetry}>\r\n                    Try again\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FinishedQuiz;","import classes from './Backdrop.module.css'\r\n\r\nimport React from 'react';\r\n\r\nconst Backdrop = (props) => <div className={classes.Backdrop} onClick={props.onClick}> </div>\r\n\r\nexport default Backdrop;","import React, {Component} from 'react'\r\nimport classes from './Drawer.module.css'\r\nimport Backdrop from \"../../UI/Backdrop/Backdrop\";\r\n\r\nclass Drawer extends Component {\r\n\r\n    renderLinks() {\r\n        return this.props.quizData.slice(0).reverse().map((items, index) =>\r\n            <li key={index}>\r\n                $ {items.money}\r\n            </li>\r\n        );\r\n    }\r\n\r\n    render() {\r\n\r\n        console.log(this.props.quizData,'this.props.quizDataDrawer');\r\n\r\n        const cls = [classes.Drawer]\r\n        if (!this.props.isOpen) {\r\n            cls.push(classes.close)\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <nav className={cls.join(' ')}>\r\n                    <ul>\r\n                        { this.renderLinks() }\r\n                    </ul>\r\n                </nav>\r\n                {this.props.isOpen ? <Backdrop onClick={this.props.onClose}/> : null}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Drawer","import React from 'react'\r\nimport classes from './MenuToggle.module.css'\r\n\r\nconst MenuToggle = props => {\r\n    const cls = [\r\n        classes.MenuToggle,\r\n        'fa'\r\n    ]\r\n\r\n    if (props.isOpen) {\r\n        cls.push('fa-times')\r\n        cls.push(classes.open)\r\n    } else {\r\n        cls.push('fa-bars')\r\n    }\r\n\r\n    return (\r\n        <i\r\n            className={cls.join(' ')}\r\n            onClick={props.onToggle}\r\n        />\r\n    )\r\n}\r\n\r\nexport default MenuToggle","import React, {Component} from 'react';\r\nimport classes from './Quiz.module.css';\r\nimport ActiveQuiz from \"../../components/ActiveQuiz/ActiveQuiz\";\r\nimport FinishedQuiz from \"../../components/FinishedQuiz/FinishedQuiz\";\r\nimport Drawer from \"../../components/Navigation/Drawer/Drawer\";\r\nimport MenuToggle from \"../../components/Navigation/MenuToggle/MenuToggle\";\r\n\r\nclass Quiz extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isFinished: false,\r\n            activeQuestion: 0,\r\n            answerState: null, // { [id]: 'success' 'error' }\r\n            checkpoint: null,\r\n            menu: false,\r\n        }\r\n    }\r\n\r\n    onAnswerClickHandler = answerId => {\r\n\r\n        // check right. if double click on right answer\r\n        if (this.state.answerState) {\r\n            const key = Object.keys(this.state.answerState)[0]\r\n            if (this.state.answerState[key] === 'success') {\r\n                return\r\n            }\r\n        }\r\n\r\n        const question = this.props.quizData[this.state.activeQuestion]\r\n\r\n        if (question.rightAnswerId === answerId) {\r\n\r\n            this.setState({\r\n                answerState: {[answerId]: 'success'}\r\n            })\r\n\r\n            const timeout = setTimeout(() => {\r\n                if (this.isQuizFinished()) {\r\n                    this.setState({\r\n                        isFinished: true,\r\n                        checkpoint: this.props.quizData[this.state.activeQuestion].money\r\n                    })\r\n                } else {\r\n\r\n                    this.setState({\r\n                        activeQuestion: this.state.activeQuestion + 1,\r\n                        answerState: null,\r\n                        checkpoint: this.props.quizData[this.state.activeQuestion].money\r\n                    })\r\n                }\r\n                clearTimeout(timeout)\r\n            }, 2000)\r\n        } else {\r\n            this.setState({\r\n                answerState: {[answerId]: 'error'}\r\n            })\r\n            setTimeout(() => {\r\n                this.setState({\r\n                    isFinished: true,\r\n                })\r\n            }, 2000)\r\n\r\n        }\r\n    }\r\n\r\n    isQuizFinished() {\r\n        return this.state.activeQuestion + 1 === this.props.quizData.length\r\n    }\r\n\r\n    retryHandler = () => {\r\n        this.setState({\r\n            isFinished: false,\r\n            activeQuestion: 0,\r\n            answerState: null,\r\n        })\r\n    }\r\n\r\n    toggleMenuHandler = () => {\r\n        this.setState({\r\n            menu: !this.state.menu\r\n        })\r\n    }\r\n    menuCloseHandler = () => {\r\n        this.setState({\r\n            menu: false\r\n        })\r\n    }\r\n\r\n    render() {\r\n        // console.log(this.props.quizData,'this.props.quizData');\r\n\r\n        return (\r\n            <div className={classes.Quiz}>\r\n                <div className={classes.QuizWrapper}>\r\n\r\n                    {this.state.isFinished\r\n                        ? <FinishedQuiz\r\n                            onRetry={this.retryHandler}\r\n                            checkpoint={this.state.checkpoint}\r\n                        />\r\n                        :\r\n                        <>\r\n                            <Drawer isOpen={this.state.menu}\r\n                                    onClose={this.menuCloseHandler}\r\n                                    quizData={this.props.quizData}\r\n                            />\r\n\r\n                            <MenuToggle\r\n                                onToggle={this.toggleMenuHandler}\r\n                                isOpen={this.state.menu}\r\n                            />\r\n                            <ActiveQuiz\r\n                                answers={this.props.quizData[this.state.activeQuestion].answers}\r\n                                question={this.props.quizData[this.state.activeQuestion].question}\r\n                                onAnswerClick={this.onAnswerClickHandler}\r\n                                quizLength={this.props.quizData.length}\r\n                                answerNumber={this.state.activeQuestion + 1}\r\n                                state={this.state.answerState}\r\n                            />\r\n                        </>\r\n\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Quiz;","import React from 'react';\r\nimport classes from './StartQuiz.module.css'\r\nimport thumbsUp from '../../img/hand-1.svg';\r\n\r\nconst StartQuiz = (props) => {\r\n\r\n    return (\r\n        <div className={classes.StartQuiz}>\r\n            <div className={classes.imgWrapper}>\r\n                <img className={classes.thumbsUp} src={thumbsUp} alt=\"thumbsUp\"/>\r\n            </div>\r\n            <div className={classes.startWrapper}>\r\n                <h1 className={classes.headline}>Who wants to be <br/> a millionaire?</h1>\r\n\r\n                <button\r\n                    className=\"Button\"\r\n                    onClick={props.onClick}>Start\r\n                </button>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StartQuiz;","import React, {useEffect, useState} from 'react';\r\nimport Layout from \"./hoc/Layout/Layout\";\r\nimport Quiz from \"./containers/Quiz/Quiz\";\r\nimport StartQuiz from \"./components/StartQuiz/StartQuiz\";\r\n\r\nconst App = () => {\r\n    const [isStart, setIsStarted] = useState(false);\r\n    const [quiz, setQuiz] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch('https://yurii07.github.io/millionaire/data.json')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setQuiz(data);\r\n            })\r\n            .catch(err => console.error(this.props.url, err.toString()))\r\n    },[]);\r\n\r\n    const startGame = () => setIsStarted(true);\r\n\r\n    return (\r\n\r\n        <div className=\"App\">\r\n\r\n            {isStart\r\n                ? <Layout>\r\n                    <Quiz quizData={quiz}/>\r\n                </Layout>\r\n                :\r\n                <StartQuiz\r\n                    onClick={startGame}\r\n                />\r\n            }\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}