{"version":3,"sources":["components/StartQuiz/StartQuiz.module.css","img/hand-1.svg","components/Navigation/MenuToggle/MenuToggle.module.css","components/Navigation/Drawer/Drawer.module.css","containers/Quiz/Quiz.module.css","components/ActiveQuiz/ActiveQuiz.module.css","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.module.css","components/UI/Button/Button.module.css","hoc/Layout/Layout.module.css","components/UI/Backdrop/Backdrop.module.css","components/ActiveQuiz/AnswersList/AnswersList.module.css","components/FinishedQuiz/FinishedQuiz.module.css","components/Navigation/MenuToggle/MenuToggle.js","components/UI/Backdrop/Backdrop.js","components/Navigation/Drawer/Drawer.js","hoc/Layout/Layout.js","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.js","components/ActiveQuiz/AnswersList/AnswersList.js","components/ActiveQuiz/ActiveQuiz.js","components/UI/Button/Button.js","components/FinishedQuiz/FinishedQuiz.js","containers/Quiz/Quiz.js","components/StartQuiz/StartQuiz.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","MenuToggle","props","cls","classes","isOpen","push","open","className","join","onClick","onToggle","Backdrop","links","Drawer","slice","reverse","map","link","index","key","this","close","renderLinks","onClose","Component","Layout","state","menu","toggleMenuHandler","setState","menuCloseHandler","children","AnswerItem","onAnswerClick","answer","id","text","AnswersList","answers","ActiveQuiz","answerNumber","question","quizLength","Question","Button","type","disabled","FinishedQuiz","src","thumbsUp","alt","onRetry","Quiz","isFinished","activeQuestion","answerState","checkpoint","quiz","rightAnswerId","money","onAnswerClickHandler","answerId","Object","keys","timeout","setTimeout","isQuizFinished","clearTimeout","retryHandler","length","QuizWrapper","StartQuiz","imgWrapper","startWrapper","headline","App","useState","isStart","setIsStarted","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8159f44d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"StartQuiz\":\"StartQuiz_StartQuiz__2O3MX\",\"img-wrapper\":\"StartQuiz_img-wrapper__3mfkx\",\"start-wrapper\":\"StartQuiz_start-wrapper__11E1R\",\"headline\":\"StartQuiz_headline__agj3G\"};","module.exports = __webpack_public_path__ + \"static/media/hand-1.ad6621a0.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuToggle\":\"MenuToggle_MenuToggle__mRe8P\",\"open\":\"MenuToggle_open__i-8UQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Drawer\":\"Drawer_Drawer__3w1Bp\",\"close\":\"Drawer_close__5Au5A\",\"active\":\"Drawer_active__17zUr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quiz\":\"Quiz_Quiz__1NHQK\",\"QuizWrapper\":\"Quiz_QuizWrapper__DPoaL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActiveQuiz\":\"ActiveQuiz_ActiveQuiz__3sdjV\",\"Question\":\"ActiveQuiz_Question__2uHtG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswerItem\":\"AnswerItem_AnswerItem__3cpKr\",\"success\":\"AnswerItem_success__Kdt-S\",\"error\":\"AnswerItem_error__2gDYp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2bxnt\",\"error\":\"Button_error__3yD6a\",\"success\":\"Button_success__9LQr7\",\"primary\":\"Button_primary__1hEOW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__1s2jD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3jQ4f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswersList\":\"AnswersList_AnswersList__2TtY8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FinishedQuiz\":\"FinishedQuiz_FinishedQuiz__161Xp\"};","import React from 'react'\r\nimport classes from './MenuToggle.module.css'\r\n\r\nconst MenuToggle = props => {\r\n    const cls = [\r\n        classes.MenuToggle,\r\n        'fa'\r\n    ]\r\n\r\n    if (props.isOpen) {\r\n        cls.push('fa-times')\r\n        cls.push(classes.open)\r\n    } else {\r\n        cls.push('fa-bars')\r\n    }\r\n\r\n    return (\r\n        <i\r\n            className={cls.join(' ')}\r\n            onClick={props.onToggle}\r\n        />\r\n    )\r\n}\r\n\r\nexport default MenuToggle","import classes from './Backdrop.module.css'\r\n\r\nimport React from 'react';\r\n\r\nconst Backdrop = (props) => <div className={classes.Backdrop} onClick={props.onClick}> </div>\r\n\r\nexport default Backdrop;","import React, {Component} from 'react'\r\nimport classes from './Drawer.module.css'\r\nimport Backdrop from \"../../UI/Backdrop/Backdrop\";\r\n\r\nconst links = [\r\n    '$500', '$1000', '$2000'\r\n]\r\n\r\nclass Drawer extends Component {\r\n\r\n    renderLinks() {\r\n        return links.slice(0).reverse().map((link, index) => {\r\n            return (\r\n                <li key={index}>\r\n                    Link {link}\r\n                </li>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const cls = [classes.Drawer]\r\n\r\n        if (!this.props.isOpen) {\r\n            cls.push(classes.close)\r\n        }\r\n\r\n        return (\r\n            <>\r\n\r\n                <nav className={cls.join(' ')}>\r\n                    <ul>\r\n                        { this.renderLinks() }\r\n                    </ul>\r\n                </nav>\r\n                {this.props.isOpen ? <Backdrop onClick={this.props.onClose}/> : null}\r\n            </>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Drawer","import React, {Component} from 'react';\r\nimport classes from './Layout.module.css';\r\nimport MenuToggle from \"../../components/Navigation/MenuToggle/MenuToggle\";\r\nimport Drawer from \"../../components/Navigation/Drawer/Drawer\";\r\n\r\nclass Layout extends Component {\r\n\r\n    state = {\r\n        menu: false,\r\n        // isStart: false\r\n    }\r\n\r\n    toggleMenuHandler = () => {\r\n        this.setState({\r\n            menu: !this.state.menu\r\n        })\r\n    }\r\n    menuCloseHandler = () => {\r\n        this.setState({\r\n            menu: false\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.Layout}>\r\n\r\n                <Drawer isOpen={this.state.menu}\r\n                        onClose={this.menuCloseHandler}\r\n                />\r\n\r\n                <MenuToggle\r\n                    onToggle={this.toggleMenuHandler}\r\n                    isOpen={this.state.menu}\r\n                />\r\n\r\n                <main>\r\n                    {this.props.children}\r\n                </main>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Layout;","import React from 'react';\r\nimport classes from './AnswerItem.module.css';\r\n\r\nconst AnswerItem = (props) => {\r\n    const cls = [classes.AnswerItem]\r\n\r\n    if(props.state) {\r\n    cls.push(classes[props.state])\r\n    }\r\n    return (\r\n            <li className={cls.join(' ')}\r\n                onClick={()=>{props.onAnswerClick(props.answer.id)}}\r\n            >\r\n                {props.answer.text}\r\n            </li>\r\n    );\r\n};\r\n\r\nexport default AnswerItem;","import React from 'react';\r\nimport classes from './AnswersList.module.css';\r\nimport AnswerItem from \"./AnswerItem/AnswerItem\";\r\n\r\nconst AnswersList = (props) => (\r\n    <ul className={classes.AnswersList}>\r\n        {props.answers.map((answer,index)=> {\r\n            return(\r\n                <AnswerItem\r\n                    key={index}\r\n                    answer={answer}\r\n                    onAnswerClick={props.onAnswerClick}\r\n                    state={props.state ? props.state[answer.id]:null}\r\n                />\r\n            )\r\n        })}\r\n    </ul>\r\n);\r\n\r\nexport default AnswersList;","import React from 'react';\r\nimport classes from './ActiveQuiz.module.css'\r\nimport AnswersList from \"./AnswersList/AnswersList\";\r\n\r\nconst ActiveQuiz = (props) => {\r\n\r\n    const {answerNumber, question, quizLength, state, answers, onAnswerClick} = props;\r\n\r\n    return (\r\n        <div className={classes.ActiveQuiz}>\r\n            <p className={classes.Question}>\r\n            <span>\r\n                <strong>{answerNumber}. </strong>\r\n                {question}\r\n            </span>\r\n                <small>{answerNumber} из {quizLength}</small>\r\n            </p>\r\n            <AnswersList\r\n                state={state}\r\n                answers={answers}\r\n                onAnswerClick={onAnswerClick}\r\n            />\r\n\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\nexport default ActiveQuiz;","import React from 'react';\r\nimport classes from './Button.module.css';\r\n\r\nconst Button = (props) => {\r\n    const cls = [\r\n        classes.Button,\r\n        classes[props.type]\r\n    ]\r\n    return (\r\n        <button\r\n            onClick={props.onClick}\r\n            className={cls.join(' ')}\r\n            disabled={props.disabled}\r\n        >\r\n            {props.children}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default Button;","import React from 'react';\r\nimport classes from './FinishedQuiz.module.css';\r\nimport thumbsUp from '../../img/hand-1.svg';\r\nimport Button from \"../UI/Button/Button\";\r\n\r\nconst FinishedQuiz = (props) => {\r\n    return (\r\n        <div className={classes.FinishedQuiz}>\r\n\r\n            <div className=\"imgWrapper\">\r\n            <img src={thumbsUp} alt=\"Screenshot\"/>\r\n            </div>\r\n\r\n            <div className=\"totalScore\">\r\n                <h2>Total score:</h2>\r\n                <div className=\"earned\">$8,000 earned</div>\r\n                <Button onClick={props.onRetry} type=\"primary\">Try again</Button>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FinishedQuiz;","import React, {Component} from 'react';\r\nimport classes from './Quiz.module.css';\r\nimport ActiveQuiz from \"../../components/ActiveQuiz/ActiveQuiz\";\r\nimport FinishedQuiz from \"../../components/FinishedQuiz/FinishedQuiz\";\r\n\r\nclass Quiz extends Component {\r\n    state = {\r\n        isFinished: false,\r\n        activeQuestion: 0,\r\n        answerState: null, // { [id]: 'success' 'error' }\r\n        checkpoint: null,\r\n        quiz: [\r\n            {\r\n                question: 'Какого цвета небо?',\r\n                rightAnswerId: 2,\r\n                money: 500,\r\n                id: 1,\r\n                answers: [\r\n                    {text: 'Черный', id: 1},\r\n                    {text: 'Синий', id: 2},\r\n                    {text: 'Красный', id: 3},\r\n                    {text: 'Зеленый', id: 4}\r\n                ]\r\n            },\r\n            {\r\n                question: 'В каком году основали Санкт-Петербург?',\r\n                rightAnswerId: 3,\r\n                money: 1000,\r\n                id: 2,\r\n                answers: [\r\n                    {text: '1700', id: 1},\r\n                    {text: '1702', id: 2},\r\n                    {text: '1703', id: 3},\r\n                    {text: '1803', id: 4}\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n\r\n    onAnswerClickHandler = answerId => {\r\n\r\n        // check right. if double click on right answer\r\n        if (this.state.answerState) {\r\n            const key = Object.keys(this.state.answerState)[0]\r\n            if (this.state.answerState[key] === 'success') {\r\n                return\r\n            }\r\n        }\r\n\r\n        const question = this.state.quiz[this.state.activeQuestion]\r\n\r\n        if (question.rightAnswerId === answerId) {\r\n\r\n            this.setState({\r\n                answerState: {[answerId]: 'success'}\r\n            })\r\n\r\n            const timeout = setTimeout(() => {\r\n                if (this.isQuizFinished()) {\r\n                    this.setState({\r\n                        isFinished: true,\r\n                        checkpoint: this.state.quiz[this.state.activeQuestion].money\r\n                    })\r\n                } else {\r\n\r\n                    this.setState({\r\n                        activeQuestion: this.state.activeQuestion + 1,\r\n                        answerState: null,\r\n                        checkpoint: this.state.quiz[this.state.activeQuestion].money\r\n                    })\r\n                }\r\n                clearTimeout(timeout)\r\n            }, 2000)\r\n        } else {\r\n            this.setState({\r\n                answerState: {[answerId]: 'error'}\r\n            })\r\n            setTimeout(()=>{\r\n                this.setState({\r\n                    isFinished: true,\r\n                })\r\n            },2000)\r\n\r\n        }\r\n    }\r\n\r\n    isQuizFinished() {\r\n        return this.state.activeQuestion + 1 === this.state.quiz.length\r\n    }\r\n\r\n    retryHandler = () => {\r\n        this.setState({\r\n            isFinished: false,\r\n            activeQuestion: 0,\r\n            answerState: null,\r\n\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.Quiz}>\r\n\r\n                {this.state.checkpoint}\r\n                <div className={classes.QuizWrapper}>\r\n                    {/*<h1>Ответьте на все вопросы</h1>*/}\r\n                    {this.state.isFinished\r\n                        ? <FinishedQuiz\r\n                            onRetry={this.retryHandler}\r\n                        />\r\n                        : <ActiveQuiz\r\n                            answers={this.state.quiz[this.state.activeQuestion].answers}\r\n                            question={this.state.quiz[this.state.activeQuestion].question}\r\n                            onAnswerClick={this.onAnswerClickHandler}\r\n                            quizLength={this.state.quiz.length}\r\n                            answerNumber={this.state.activeQuestion + 1}\r\n                            state={this.state.answerState}\r\n                        />\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Quiz;","import React from 'react';\r\nimport classes from './StartQuiz.module.css'\r\nimport thumbsUp from '../../img/hand-1.svg';\r\n\r\nconst StartQuiz = (props) => {\r\n\r\n    return (\r\n        <div className={classes.StartQuiz}>\r\n            <div className={classes.imgWrapper}>\r\n                <img src={thumbsUp} alt=\"thumbsUp\"/>\r\n            </div>\r\n            <div className={classes.startWrapper}>\r\n                <h1 className={classes.headline}>Who wants to be a millionaire?</h1>\r\n\r\n                <button\r\n                    className=\"Button\"\r\n                    onClick={props.onClick}>Start</button>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StartQuiz;","import React, {useState} from 'react';\r\nimport Layout from \"./hoc/Layout/Layout\";\r\nimport Quiz from \"./containers/Quiz/Quiz\";\r\nimport StartQuiz from \"./components/StartQuiz/StartQuiz\";\r\n\r\nconst App = () => {\r\n    const [isStart, setIsStarted] = useState(false);\r\n\r\n    const startGame = () => setIsStarted(true);\r\n\r\n    return (\r\n\r\n        <div className=\"App\">\r\n\r\n            {isStart\r\n                ? <Layout>\r\n                    <Quiz/>\r\n                </Layout>\r\n                :\r\n                <StartQuiz\r\n                    onClick={startGame}\r\n                />\r\n            }\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}